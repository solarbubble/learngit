git学习笔记

创建一个版本库
$ mkdir learngit
$ cd learngit
$ pwd
$ git init
$ git add readme.txt
$ git commit -m "wrote a readme file"

仓库当前的状态
$ git status

可以查看修改内容
$ git diff

关联远程库
1.在本地目录下关联远程repository ：
git remote add origin git@github.com:git_username/repository_name.git
例如：git remote add orgin git@github.com:solarbubble/learngit.git
2.取消本地目录下关联的远程库：
git remote remove origin

第一次推送master分支的所有内容
git push -u origin master

此后，每次本地提交后可用
git push origin master

版本回退
git reset --hard commit_id。
HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令

git log
穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

git reflog
要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

撤销修改
git checkout -- readme.txt
意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：
一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；
一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。
总之，就是让这个文件回到最近一次git commit或git add时的状态。

git reset HEAD readme.txt(HEAD，表示最新的版本)
把暂存区的修改撤销掉（unstage），重新放回工作区

删除文件
$ rm test.txt
$ git commit -m "remove test.txt"

误删的文件恢复到最新版本
$ git checkout -- test.txt

分支小结
Git鼓励大量使用分支：
查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>

看到分支的合并情况
$ git log --graph --pretty=oneline --abbrev-commit